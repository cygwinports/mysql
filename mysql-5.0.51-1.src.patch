--- origsrc/mysql-5.0.51/client/mysql.cc	2007-11-15 08:06:34.000000000 -0600
+++ src/mysql-5.0.51/client/mysql.cc	2008-03-24 20:25:14.437500000 -0500
@@ -87,6 +87,7 @@
 #include <conio.h>
 #elif !defined(__NETWARE__)
 #include <readline/readline.h>
+#include <readline/history.h>
 #define HAVE_READLINE
 #endif
   //int vidattr(long unsigned int attrs);	// Was missing in sun curses
@@ -306,22 +307,6 @@
 { "server", "embedded", "mysql_SERVER", 0 };
 
 #ifdef HAVE_READLINE
-/*
- HIST_ENTRY is defined for libedit, but not for the real readline
- Need to redefine it for real readline to find it
-*/
-#if !defined(HAVE_HIST_ENTRY)
-typedef struct _hist_entry {
-  const char      *line;
-  const char      *data;
-} HIST_ENTRY; 
-#endif
-
-extern "C" int add_history(const char *command); /* From readline directory */
-extern "C" int read_history(const char *command);
-extern "C" int write_history(const char *command);
-extern "C" HIST_ENTRY *history_get(int num);
-extern "C" int history_length;
 static int not_in_history(const char *line);
 static void initialize_readline (char *name);
 static void fix_history(String *final_command);
--- origsrc/mysql-5.0.51/config/ac-macros/readline.m4	2007-11-15 08:06:34.000000000 -0600
+++ src/mysql-5.0.51/config/ac-macros/readline.m4	2008-03-24 20:25:14.468750000 -0500
@@ -1,9 +1,9 @@
 AC_DEFUN([MYSQL_CHECK_READLINE_DECLARES_HIST_ENTRY], [
-    AC_CACHE_CHECK([HIST_ENTRY is declared in readline/readline.h], mysql_cv_hist_entry_declared,
+    AC_CACHE_CHECK([HIST_ENTRY is declared in readline/history.h], mysql_cv_hist_entry_declared,
 	AC_TRY_COMPILE(
 	    [
 		#include "stdio.h"
-		#include "readline/readline.h"
+		#include "readline/history.h"
 	    ],
 	    [ 
 		HIST_ENTRY entry;
--- origsrc/mysql-5.0.51/configure.in	2007-11-15 08:06:32.000000000 -0600
+++ src/mysql-5.0.51/configure.in	2008-03-24 20:25:14.484375000 -0500
@@ -2537,7 +2537,7 @@
     MYSQL_CHECK_NEW_RL_INTERFACE
     MYSQL_CHECK_READLINE_DECLARES_HIST_ENTRY
     AC_LANG_RESTORE
-    if [test "$mysql_cv_new_rl_interface" = "yes"] && [test -d "./cmd-line-utils/readline"]
+    if [test "$mysql_cv_new_rl_interface" = "yes"] && [test -d "${srcdir}/cmd-line-utils/readline"]
     then
         # Use the new readline interface, but only if the package includes a bundled libreadline
         # this way we avoid linking commercial source with GPL readline
@@ -2554,7 +2554,7 @@
 fi
 
 # if there is no readline, but we want to build with readline, we fail
-if [test "$want_to_use_readline" = "yes"] && [test ! -d "./cmd-line-utils/readline"]
+if [test "$want_to_use_readline" = "yes"] && [test ! -d "${srcdir}/cmd-line-utils/readline"]
 then
     AC_MSG_ERROR([This commercially licensed MySQL source package can't
           be built with libreadline. Please use --with-libedit to use
--- origsrc/mysql-5.0.51/dbug/Makefile.am	2007-11-15 08:06:50.000000000 -0600
+++ src/mysql-5.0.51/dbug/Makefile.am	2008-03-24 20:25:14.500000000 -0500
@@ -38,10 +38,10 @@
 all:            user.t user.ps
 
 user.t:         user.r $(NROFF_INC)
-		-nroff -mm user.r > $@
+		-nroff -mm $(srcdir)/user.r > $@
 
 user.ps:	user.r $(NROFF_INC)
-		-groff -mm user.r > $@
+		-groff -mm $(srcdir)/user.r > $@
 
 output1.r:      factorial
 		./factorial 1 2 3 4 5 | cat > $@
--- origsrc/mysql-5.0.51/libmysql/Makefile.shared	2007-11-15 08:06:35.000000000 -0600
+++ src/mysql-5.0.51/libmysql/Makefile.shared	2008-03-24 20:25:14.500000000 -0500
@@ -77,7 +77,7 @@
 mysysobjects =		$(mysysobjects1) $(mysysobjects2)
 target_libadd =		$(mysysobjects) $(mystringsobjects) $(dbugobjects) \
  $(sql_cmn_objects) $(vio_objects) $(sqlobjects)
-target_ldflags = -version-info @SHARED_LIB_VERSION@ @LD_VERSION_SCRIPT@ 
+target_ldflags = -version-info @SHARED_LIB_VERSION@ @LD_VERSION_SCRIPT@ -no-undefined
 vio_objects= vio.lo viosocket.lo viossl.lo viosslfactories.lo
 CLEANFILES =		$(target_libadd) $(SHLIBOBJS) \
 			$(target)
--- origsrc/mysql-5.0.51/mysql-test/mysql-test-run.pl	2007-11-15 08:06:16.000000000 -0600
+++ src/mysql-5.0.51/mysql-test/mysql-test-run.pl	2008-03-24 20:25:14.515625000 -0500
@@ -70,8 +70,7 @@
 $| = 1; # Automatically flush STDOUT
 
 our $glob_win32_perl=  ($^O eq "MSWin32"); # ActiveState Win32 Perl
-our $glob_cygwin_perl= ($^O eq "cygwin");  # Cygwin Perl
-our $glob_win32=       ($glob_win32_perl or $glob_cygwin_perl);
+our $glob_win32=       ($glob_win32_perl);
 our $glob_netware=     ($^O eq "NetWare"); # NetWare
 
 require "lib/mtr_cases.pl";
@@ -647,12 +646,6 @@
 
   # Find the absolute path to the test directory
   $glob_mysql_test_dir=  cwd();
-  if ( $glob_cygwin_perl )
-  {
-    # Windows programs like 'mysqld' needs Windows paths
-    $glob_mysql_test_dir= `cygpath -m "$glob_mysql_test_dir"`;
-    chomp($glob_mysql_test_dir);
-  }
 
   # In most cases, the base directory we find everything relative to,
   # is the parent directory of the "mysql-test" directory. For source
--- origsrc/mysql-5.0.51/ndb/src/Makefile.am	2007-11-15 08:06:16.000000000 -0600
+++ src/mysql-5.0.51/ndb/src/Makefile.am	2008-03-24 20:25:14.531250000 -0500
@@ -23,6 +23,8 @@
 
 libndbclient_la_LDFLAGS = -version-info @NDB_SHARED_LIB_VERSION@ @NDB_LD_VERSION_SCRIPT@
 
+libndbclient_la_LDFLAGS = -no-undefined
+
 libndbclient_la_LIBADD =  \
               ndbapi/libndbapi.la \
               common/transporter/libtransporter.la   \
--- origsrc/mysql-5.0.51/sql/Makefile.am	2007-11-15 08:06:51.000000000 -0600
+++ src/mysql-5.0.51/sql/Makefile.am	2008-03-24 22:41:55.812500000 -0500
@@ -172,7 +172,8 @@
 # For testing of udf_example.so
 noinst_LTLIBRARIES= udf_example.la
 udf_example_la_SOURCES= udf_example.c
-udf_example_la_LDFLAGS= -module -rpath $(pkglibdir)
+udf_example_la_LDFLAGS= -module -avoid-version -no-undefined -rpath $(pkglibdir)
+udf_example_la_LIBADD=../libmysql/libmysqlclient.la
 
 
 # Don't update the files from bitkeeper
